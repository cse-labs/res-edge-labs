#!/bin/bash

k3d_config="${CLI_BOA_DIR}/k3d.yaml"

# validate directory
if [ ! -f "$k3d_config" ]; then
  echo "File not found - $k3d_config"
  exit 1
fi

# delete existing cluster
# ignore no-cluster error message
kic cluster delete

# add github token for private registry
cp "${REPO_BASE}"/vm/setup/registries.templ "$HOME/bin/.kic/registries.yaml"
sed -i -e "s/{{pib-pat}}/$PIB_PAT/g" "$HOME/bin/.kic/registries.yaml"

echo ""
echo "Creating cluster ..."

# create the cluster
k3d cluster create \
  --registry-use k3d-registry.localhost:5500 \
  --registry-config "$HOME/bin/.kic/registries.yaml" \
  --config "${k3d_config}" \
  --k3s-arg "--disable=servicelb@server:0" \
  --k3s-arg "--disable=traefik@server:0"

# delete registries.yaml
rm -f "$HOME/bin/.kic/registries.yaml"


echo "waiting for cluster to start"
sleep 5
kubectl wait pods -n kube-system -l k8s-app=kube-dns --for condition=Ready --timeout=30s

kubectl apply -f - <<EOF
apiVersion: v1
kind: Pod
metadata:
  name: jumpbox
  namespace: default
  labels:
    app.kubernetes.io/name: jumpbox

spec:
  containers:
  - name: app
    image: ghcr.io/cse-labs/jumpbox:latest
    imagePullPolicy: Always

    resources:
      limits:
        cpu: 500m
        memory: 64Mi

      requests:
        cpu: 200m
        memory: 64Mi
EOF

kic pods
