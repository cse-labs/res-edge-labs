#!/bin/bash

KIC_RES_EDGE_URL="http://localhost:32080"
KIC_RES_EDGE_URL="https://api.res-edge.net/"

PARENT_COMMAND=$(ps -o comm= $PPID)

usage() {
  if [ "${KIC_RES_EDGE_ENTITYNAME}" = "clusters" ]; then
    echo "Usage: kic ${KIC_RES_EDGE_ENTITYNAME} ${PARENT_COMMAND} --search [search term] --order-by [name/id]"
    echo "   or: kic ${KIC_RES_EDGE_ENTITYNAME} ${PARENT_COMMAND} --group [name]"
    echo '   --group:  filter clusters by group'
    echo "   --search: Search for ${KIC_RES_EDGE_ENTITYNAME} by name, metadata or tag. Optional."
    echo '   --order-by: Order by name or id. Optional. Default: id.'
    exit 1
  else
    echo "Usage: kic ${KIC_RES_EDGE_ENTITYNAME} ${PARENT_COMMAND} --search [search term] --order-by [name/id]"
    echo "   --search: Search for ${KIC_RES_EDGE_ENTITYNAME} by name, metadata or tag. Optional."
    echo '   --order-by: Order by name or id. Optional. Default: id.'
  fi
}

list_clusters() {

    CLUSTERS=$(curl --silent --show-error "$URL" | jq -r ' .value[] | .clustersTree' )

    if [ "$CLUSTERS" = "" ]; then
        echo "No clusters found";
        exit 1;
    fi

    CLUSTERS=${CLUSTERS:1}
    CLUSTERS=${CLUSTERS::-1}

    for s in $(echo $CLUSTERS | sed "s/,/\n/g"); do echo $s | sed "s/\/api/localhost:32080\/api/g" | xargs curl -s | jq -r .name; done
}

if [ -z "${KIC_RES_EDGE_URL}" ]; then
  echo "Error: KIC_RES_EDGE_URL environment variable is not set"
fi

while getopts ":s:o:g:" f; do
    case "${f}" in
        s)
            SEARCH=$OPTARG ;;
        o)
            ORDERBY=$OPTARG ;;
        g)
            GROUP=$OPTARG ;;
        *)
            usage ; exit 1 ;;
    esac
done
shift $((OPTIND-1))

if [ -n "$ORDERBY" ] && [ "$ORDERBY" != "id" ] && [ "$ORDERBY" != "name" ]; then
  echo "Error: Order by supports either 'id' or 'name'."
  usage
fi

URL_PARAMS=()

if [ -n "${SEARCH}" ]; then
  URL_PARAMS+=("filter=(name%20eq%20%27$SEARCH%27%20or%20tags/any(t:t%20eq%20%27$SEARCH%27)%20or%20metadata/any(m:m/value%20eq%20%27$SEARCH%27))")
fi

if [ -n "${ORDERBY}" ]; then
  URL_PARAMS+=("orderby=${ORDERBY}")
fi

if [ -n "${GROUP}" ]; then
  if [ -n "${SEARCH}" ] || [ -n "${ORDERBY}" ]; then
      usage;
      exit 1;
  fi

  URL_PARAMS+=("filter=name%20eq%20%27${GROUP}%27&select=clustersTree")
  KIC_RES_EDGE_ENTITYNAME="groups"
fi

KIC_BASE_URL="${KIC_RES_EDGE_URL}/api/v1/${KIC_RES_EDGE_ENTITYNAME}/"

# Implode the array with the separator "&" to create a single string
URL_QUERY_STRING=$(printf "&%s" "${URL_PARAMS[@]}")
URL_QUERY_STRING=${URL_QUERY_STRING:1}

URL="${KIC_BASE_URL}?${URL_QUERY_STRING}"

if [ -n "${GROUP}" ]; then
  CLUSTERS=$(list_clusters)
  echo "$CLUSTERS"
else
  response=$(curl --silent --show-error "$URL")
  echo "$response" | jq
fi

if [ $? -ne 0 ]; then
  echo "Error: Failed to retrieve data from $URL"
  echo "Please check that the res-edge server is up and running with: kic check resedge"
  exit 1
fi
