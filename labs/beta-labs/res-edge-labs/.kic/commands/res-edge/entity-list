#!/bin/bash

KIC_RES_EDGE_URL="http://localhost:32080"
KIC_RES_EDGE_URL="https://api.res-edge.net/"

PARENT_COMMAND=$(ps -o comm= $PPID)

usage() {
  echo "Usage: kic ${KIC_RES_EDGE_ENTITYNAME} ${PARENT_COMMAND} --search [search term] --order-by [name/id]"
  echo '   --search: Search for application by name, metadata or tag. Optional.'
  echo '   --order-by: Order by name or id. Optional. Default: id.'
  exit 1
}

if [ -z "${KIC_RES_EDGE_URL}" ]; then
  echo "Error: KIC_RES_EDGE_URL environment variable is not set"
fi

while getopts ":s:o:" f; do
    case "${f}" in
        s)
            SEARCH=$OPTARG ;;
        o)
            ORDERBY=$OPTARG ;;
        *)
            usage ; exit 1 ;;
    esac
done
shift $((OPTIND-1))

if [ -n "$ORDERBY" ] && [ "$ORDERBY" != "id" ] && [ "$ORDERBY" != "name" ]; then
  echo "Error: Order by supports either 'id' or 'name'."
  usage
fi

KIC_BASE_URL="${KIC_RES_EDGE_URL}/api/v1/${KIC_RES_EDGE_ENTITYNAME}/"

URL_PARAMS=()

if [ "${SEARCH}" != "" ]; then
  URL_PARAMS+=("filter=(name%20eq%20%27$SEARCH%27%20or%20tags/any(t:t%20eq%20%27$SEARCH%27)%20or%20metadata/any(m:m/value%20eq%20%27$SEARCH%27))")
fi

if [ "${ORDERBY}" != "" ]; then
  URL_PARAMS+=("orderby=${ORDERBY}")
fi

# Implode the array with the separator "&" to create a single string
URL_QUERY_STRING=$(printf "&%s" "${URL_PARAMS[@]}")
URL_QUERY_STRING=${URL_QUERY_STRING:1}

URL="${KIC_BASE_URL}?${URL_QUERY_STRING}"

response=$(curl --silent --show-error "$URL")

if [ $? -ne 0 ]; then
  echo "Error: Failed to retrieve data from $URL"
  echo "Please check that the res-edge server is up and running with: kic check resedge"
  exit 1
fi

echo "$response" | jq -r ' .value[]'
