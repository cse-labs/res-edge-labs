#!/bin/bash

set -e

URL="http://localhost:32080/api/v1";
SEARCH="";
ORDERBY="";
URL_FILTER="";
URL_ORDER_BY="";
GROUP="";
CLUSTERS="";

function print_usage {
  echo "Usage:$0 -g [name]"
  echo "   or:$0 -s [search term] -o [name/id]"
    echo '   -g  filter clusters by group'
    echo '   -s  search for clusters by name, metadata, tag'
    echo '   -o  order by name or id'
}

function get_clusters {
    curl -s "$URL"
}

function list_clusters {

    CLUSTERS=$(get_clusters | jq -r ' .value[] | .clustersTree' )

    if [ "$CLUSTERS" = "" ]; then
        echo "No clusters found";
        exit 1;
    fi

    CLUSTERS=${CLUSTERS:1}
    CLUSTERS=${CLUSTERS::-1}

    for s in $(echo $CLUSTERS | sed "s/,/\n/g"); do echo $s | sed "s/\/api/localhost:32080\/api/g" | xargs curl -s | jq -r .name; done
}

while getopts ":s:o:g:" opts; do
    case "${opts}" in
        s)
            SEARCH=$OPTARG ;;
        o)
            ORDERBY=$OPTARG ;;
        g)
            GROUP=$OPTARG ;;
        *)
            print_usage ; exit 1 ;;
    esac
done
shift $((OPTIND-1))

if [ "${GROUP}" != "" ]; then
    URL="${URL}/groups?filter=name%20eq%20%27${GROUP}%27&select=clustersTree";
    CLUSTERS=$(list_clusters)

    if [ "${SEARCH}" != "" ] || [ "${ORDERBY}" != "" ]; then
        print_usage;
        exit 1;
    fi
else
    if [ "${SEARCH}" != "" ]; then
        URL_FILTER="?filter=(name%20eq%20%27$SEARCH%27%20or%20tags/any(t:t%20eq%20%27$SEARCH%27)%20or%20metadata/any(m:m/value%20eq%20%27$SEARCH%27))"

        if [ "${ORDERBY}" != "" ]; then
            URL_ORDER_BY="&?orderby=name"
        fi
    else
        if [ "${ORDERBY}" != "" ]; then
            URL_ORDER_BY="?orderby=name"
        fi
    fi

    URL="${URL}/clusters${URL_FILTER}${URL_ORDER_BY}"
    CLUSTERS=$(get_clusters | jq -r ' .value[] | .name')

    if [ "$CLUSTERS" = "" ]; then
        echo "No clusters found";
        exit 1;
    fi
fi

echo "$CLUSTERS"
